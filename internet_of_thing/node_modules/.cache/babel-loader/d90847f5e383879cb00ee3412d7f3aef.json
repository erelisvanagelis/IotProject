{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\ReactNativeProjects\\\\internet_of_things\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Box, Container, Divider, Stack } from \"@mui/material\";\nimport { sizing } from \"@mui/system\";\nimport SensorValueRow from \"./components/SensorValueRow\";\nimport { useState } from \"react\";\nimport ButtonDeviceRow from \"./components/ButtonDeviceRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const distanceMeasure = \"mm\";\n  const temperatureMeasure = \"Celcius\";\n  const [sensorState, setSensorState] = useState({\n    mtS1: 0,\n    mtS2: 0,\n    tmpS: 0\n  });\n  const [deviceState, setDeviceState] = useState({\n    lamp1: \"off\",\n    lamp2: \"off\",\n    lamp3: \"off\"\n  });\n  const lampStates = [{\n    value: \"on\",\n    title: \"On\"\n  }, {\n    value: \"off\",\n    title: \"Off\"\n  }];\n  return (\n    /*#__PURE__*/\n    // <div className=\"App-header\">\n    // <Container\n    //   maxWidth=\"lg\"\n    //   sx={{ backgroundColor: \"#778899\", minHeight: \"100vh\" }}\n    // >\n    _jsxDEV(Stack, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'red'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) // <h2>Sensor Data:</h2>\n    // <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n    //   <div style={{ flex: 1 }} />\n    //   <div style={{ flex: 15, flexDirection: \"column\" }}>\n    //     <SensorValueRow\n    //       description={\"Motion sensor (1)\"}\n    //       value={sensorState.mtS1}\n    //       measure={distanceMeasure}\n    //     />\n    //     <SensorValueRow\n    //       description={\"Motion sensor (2)\"}\n    //       value={sensorState.mtS2}\n    //       measure={distanceMeasure}\n    //     />\n    //     <SensorValueRow\n    //       description={\"Temperature sensor\"}\n    //       value={sensorState.tmpS}\n    //       measure={temperatureMeasure}\n    //     />\n    //   </div>\n    // </div> \n    // <Divider />\n    // <h2>Device Status:</h2>\n    // <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n    //   <div style={{ flex: 1 }} />\n    //   <div style={{ flex: 15, flexDirection: \"column\" }}>\n    //     <ButtonDeviceRow\n    //       description={\"Light (1)\"}\n    //       selectedValue={deviceState.lamp1}\n    //       buttonsValueTitleSet={lampStates}\n    //       setSelectedValue={(value) =>\n    //         setDeviceState({ ...deviceState, lamp1: value })\n    //       }\n    //     />\n    //     <ButtonDeviceRow\n    //       description={\"Light (2)\"}\n    //       selectedValue={deviceState.lamp2}\n    //       buttonsValueTitleSet={lampStates}\n    //       setSelectedValue={(value) =>\n    //         setDeviceState({ ...deviceState, lamp2: value })\n    //       }\n    //     />\n    //     <ButtonDeviceRow\n    //       description={\"Light (3)\"}\n    //       selectedValue={deviceState.lamp3}\n    //       buttonsValueTitleSet={lampStates}\n    //       setSelectedValue={(value) =>\n    //         setDeviceState({ ...deviceState, lamp2: value })\n    //       }\n    //     />\n    //   </div>\n    // </div>\n    // </Container>\n    // </div>\n\n  );\n}\n\n_s(App, \"bcXPu1PItQBvym5I/OzgCzhog4w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Acer/ReactNativeProjects/internet_of_things/src/App.js"],"names":["logo","Box","Container","Divider","Stack","sizing","SensorValueRow","useState","ButtonDeviceRow","App","distanceMeasure","temperatureMeasure","sensorState","setSensorState","mtS1","mtS2","tmpS","deviceState","setDeviceState","lamp1","lamp2","lamp3","lampStates","value","title","background"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,OAAzB,EAAkCC,KAAlC,QAA+C,eAA/C;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,eAAe,GAAG,IAAxB;AACA,QAAMC,kBAAkB,GAAG,SAA3B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC;AAC7CO,IAAAA,IAAI,EAAE,CADuC;AAE7CC,IAAAA,IAAI,EAAE,CAFuC;AAG7CC,IAAAA,IAAI,EAAE;AAHuC,GAAD,CAA9C;AAMA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC;AAC7CY,IAAAA,KAAK,EAAE,KADsC;AAE7CC,IAAAA,KAAK,EAAE,KAFsC;AAG7CC,IAAAA,KAAK,EAAE;AAHsC,GAAD,CAA9C;AAMA,QAAMC,UAAU,GAAG,CACjB;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GADiB,EAEjB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAFiB,CAAnB;AAKA;AAAA;AACE;AACE;AACA;AACA;AACA;AAEE,YAAC,KAAD;AAAA,6BAiBE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAE;AAAb,SAAZ;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAjBF;AAAA;AAAA;AAAA;AAAA,YAPN,CA4BM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACF;;AAnFF;AAqFD;;GAzGQhB,G;;KAAAA,G;AA2GT,eAAeA,GAAf","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Box, Container, Divider, Stack } from \"@mui/material\";\nimport { sizing } from \"@mui/system\";\nimport SensorValueRow from \"./components/SensorValueRow\";\nimport { useState } from \"react\";\nimport ButtonDeviceRow from \"./components/ButtonDeviceRow\";\n\nfunction App() {\n  const distanceMeasure = \"mm\";\n  const temperatureMeasure = \"Celcius\";\n  const [sensorState, setSensorState] = useState({\n    mtS1: 0,\n    mtS2: 0,\n    tmpS: 0,\n  });\n\n  const [deviceState, setDeviceState] = useState({\n    lamp1: \"off\",\n    lamp2: \"off\",\n    lamp3: \"off\",\n  });\n\n  const lampStates = [\n    { value: \"on\", title: \"On\" },\n    { value: \"off\", title: \"Off\" },\n  ];\n\n  return (\n    // <div className=\"App-header\">\n      // <Container\n      //   maxWidth=\"lg\"\n      //   sx={{ backgroundColor: \"#778899\", minHeight: \"100vh\" }}\n      // >\n  \n        <Stack>\n        {/* <h2>Sensor Data:</h2>\n          <SensorValueRow\n            description={\"Motion sensor (1)\"}\n            value={sensorState.mtS1}\n            measure={distanceMeasure}\n          />\n          <SensorValueRow\n            description={\"Motion sensor (2)\"}\n            value={sensorState.mtS2}\n            measure={distanceMeasure}\n          />\n          <SensorValueRow\n            description={\"Temperature sensor\"}\n            value={sensorState.tmpS}\n            measure={temperatureMeasure}\n          /> */}\n          <div style={{background: 'red'}}>\n            <p>test</p>\n          </div>    \n        </Stack>\n        // <h2>Sensor Data:</h2>\n        // <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        //   <div style={{ flex: 1 }} />\n        //   <div style={{ flex: 15, flexDirection: \"column\" }}>\n        //     <SensorValueRow\n        //       description={\"Motion sensor (1)\"}\n        //       value={sensorState.mtS1}\n        //       measure={distanceMeasure}\n        //     />\n        //     <SensorValueRow\n        //       description={\"Motion sensor (2)\"}\n        //       value={sensorState.mtS2}\n        //       measure={distanceMeasure}\n        //     />\n        //     <SensorValueRow\n        //       description={\"Temperature sensor\"}\n        //       value={sensorState.tmpS}\n        //       measure={temperatureMeasure}\n        //     />\n        //   </div>\n        // </div> \n\n        // <Divider />\n\n        // <h2>Device Status:</h2>\n        // <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        //   <div style={{ flex: 1 }} />\n        //   <div style={{ flex: 15, flexDirection: \"column\" }}>\n        //     <ButtonDeviceRow\n        //       description={\"Light (1)\"}\n        //       selectedValue={deviceState.lamp1}\n        //       buttonsValueTitleSet={lampStates}\n        //       setSelectedValue={(value) =>\n        //         setDeviceState({ ...deviceState, lamp1: value })\n        //       }\n        //     />\n        //     <ButtonDeviceRow\n        //       description={\"Light (2)\"}\n        //       selectedValue={deviceState.lamp2}\n        //       buttonsValueTitleSet={lampStates}\n        //       setSelectedValue={(value) =>\n        //         setDeviceState({ ...deviceState, lamp2: value })\n        //       }\n        //     />\n        //     <ButtonDeviceRow\n        //       description={\"Light (3)\"}\n        //       selectedValue={deviceState.lamp3}\n        //       buttonsValueTitleSet={lampStates}\n        //       setSelectedValue={(value) =>\n        //         setDeviceState({ ...deviceState, lamp2: value })\n        //       }\n        //     />\n        //   </div>\n        // </div>\n      // </Container>\n    // </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}