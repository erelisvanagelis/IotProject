{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\ReactNativeProjects\\\\internet_of_things\\\\src\\\\components\\\\ButtonDeviceRow.js\";\nimport { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ButtonDeviceRow(_ref) {\n  let {\n    description,\n    selectedValue,\n    buttonsValueTitleSet,\n    setSelectedValue\n  } = _ref;\n\n  const handleAlignment = (event, value) => {\n    console.log(value);\n    setSelectedValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 6\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n        value: selectedValue,\n        exclusive: true,\n        onChange: handleAlignment,\n        fullWidth: true,\n        children: buttonsValueTitleSet.map((set, index) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: set.value,\n          style: {\n            flex: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: set.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = ButtonDeviceRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonDeviceRow\");","map":{"version":3,"sources":["C:/Users/Acer/ReactNativeProjects/internet_of_things/src/components/ButtonDeviceRow.js"],"names":["ToggleButton","ToggleButtonGroup","ButtonDeviceRow","description","selectedValue","buttonsValueTitleSet","setSelectedValue","handleAlignment","event","value","console","log","display","flexDirection","flex","alignItems","justifyContent","map","set","index","title"],"mappings":";AAAA,SAASA,YAAT,EAAuBC,iBAAvB,QAAgD,eAAhD;;AAEA,eAAe,SAASC,eAAT,OAKZ;AAAA,MALqC;AACtCC,IAAAA,WADsC;AAEtCC,IAAAA,aAFsC;AAGtCC,IAAAA,oBAHsC;AAItCC,IAAAA;AAJsC,GAKrC;;AACD,QAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAH,IAAAA,gBAAgB,CAACG,KAAD,CAAhB;AACD,GAHD;;AAKA,sBACE;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,aAAa,EAAE;AAFV,KADT;AAAA,4BAME;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAZ;AAAA,6BACE;AAAA,kBAAIX;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAUE;AACE,MAAA,KAAK,EAAE;AACLW,QAAAA,IAAI,EAAE,CADD;AAELC,QAAAA,UAAU,EAAE,QAFP;AAGLC,QAAAA,cAAc,EAAE;AAHX,OADT;AAAA,6BAOE,QAAC,iBAAD;AACE,QAAA,KAAK,EAAEZ,aADT;AAEE,QAAA,SAAS,EAAE,IAFb;AAGE,QAAA,QAAQ,EAAEG,eAHZ;AAIE,QAAA,SAAS,MAJX;AAAA,kBAMGF,oBAAoB,CAACY,GAArB,CAAyB,CAACC,GAAD,EAAMC,KAAN,kBACxB,QAAC,YAAD;AAAc,UAAA,KAAK,EAAED,GAAG,CAACT,KAAzB;AAAgC,UAAA,KAAK,EAAE;AAACK,YAAAA,IAAI,EAAE;AAAP,WAAvC;AAAA,iCACE;AAAA,sBAAII,GAAG,CAACE;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD;AANH;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;KA5CuBlB,e","sourcesContent":["import { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\r\n\r\nexport default function ButtonDeviceRow({\r\n  description,\r\n  selectedValue,\r\n  buttonsValueTitleSet,\r\n  setSelectedValue,\r\n}) {\r\n  const handleAlignment = (event, value) => {\r\n    console.log(value);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n      }}\r\n    >\r\n      <div style={{ flex: 6 }}>\r\n        <p>{description}</p>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <ToggleButtonGroup\r\n          value={selectedValue}\r\n          exclusive={true}\r\n          onChange={handleAlignment}\r\n          fullWidth\r\n        >\r\n          {buttonsValueTitleSet.map((set, index) => (\r\n            <ToggleButton value={set.value} style={{flex: 1}}>\r\n              <p>{set.title}</p>\r\n            </ToggleButton>\r\n          ))}\r\n        </ToggleButtonGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}