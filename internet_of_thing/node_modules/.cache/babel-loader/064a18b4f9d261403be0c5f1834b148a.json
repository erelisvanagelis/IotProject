{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"\"\n});\nexport async function getData() {\n  try {\n    // const response = await axios.get('/data/');\n    await new Promise(r => setTimeout(r, 1000));\n    const response = {\n      light1: getRandomInt(100),\n      light2: getRandomInt(100),\n      light3: getRandomInt(30)\n    };\n    console.log(response);\n    return {\n      success: true,\n      response: { ...response\n      }\n    };\n  } catch (error) {\n    console.error(error);\n    return {\n      success: false,\n      ...error\n    };\n  }\n}\nexport async function updateDeviceState(device, state) {\n  try {\n    console.log(`device: ${device}, state: ${state}`);\n    const response = {\n      yeet: \"\"\n    }; // const response = await axios.put(`/device/${state}`);\n\n    await new Promise(r => setTimeout(r, 1000));\n    console.log(response);\n    return {\n      success: true,\n      ...response\n    };\n  } catch (error) {\n    console.error(error);\n    return {\n      success: false,\n      ...error\n    };\n  }\n}","map":{"version":3,"sources":["C:/Users/Acer/ReactNativeProjects/internet_of_things/src/API/IoT.js"],"names":["axios","api","create","baseURL","getData","Promise","r","setTimeout","response","light1","getRandomInt","light2","light3","console","log","success","error","updateDeviceState","device","state","yeet"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE;AADc,CAAb,CAAZ;AAIA,OAAO,eAAeC,OAAf,GAAyB;AAC9B,MAAI;AACF;AACA,UAAM,IAAIC,OAAJ,CAAaC,CAAD,IAAOC,UAAU,CAACD,CAAD,EAAI,IAAJ,CAA7B,CAAN;AACA,UAAME,QAAQ,GAAG;AACfC,MAAAA,MAAM,EAAEC,YAAY,CAAC,GAAD,CADL;AAEfC,MAAAA,MAAM,EAAED,YAAY,CAAC,GAAD,CAFL;AAGfE,MAAAA,MAAM,EAAEF,YAAY,CAAC,EAAD;AAHL,KAAjB;AAKAG,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,WAAO;AAAEO,MAAAA,OAAO,EAAE,IAAX;AAAiBP,MAAAA,QAAQ,EAAE,EAAE,GAAGA;AAAL;AAA3B,KAAP;AACD,GAVD,CAUE,OAAOQ,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACA,WAAO;AAAED,MAAAA,OAAO,EAAE,KAAX;AAAkB,SAAGC;AAArB,KAAP;AACD;AACF;AAED,OAAO,eAAeC,iBAAf,CAAiCC,MAAjC,EAAyCC,KAAzC,EAAgD;AACrD,MAAI;AACFN,IAAAA,OAAO,CAACC,GAAR,CAAa,WAAUI,MAAO,YAAWC,KAAM,EAA/C;AACA,UAAMX,QAAQ,GAAG;AAAEY,MAAAA,IAAI,EAAE;AAAR,KAAjB,CAFE,CAGF;;AACA,UAAM,IAAIf,OAAJ,CAAaC,CAAD,IAAOC,UAAU,CAACD,CAAD,EAAI,IAAJ,CAA7B,CAAN;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,WAAO;AAAEO,MAAAA,OAAO,EAAE,IAAX;AAAiB,SAAGP;AAApB,KAAP;AACD,GAPD,CAOE,OAAOQ,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACA,WAAO;AAAED,MAAAA,OAAO,EAAE,KAAX;AAAkB,SAAGC;AAArB,KAAP;AACD;AACF","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"\",\r\n});\r\n\r\nexport async function getData() {\r\n  try {\r\n    // const response = await axios.get('/data/');\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    const response = {\r\n      light1: getRandomInt(100),\r\n      light2: getRandomInt(100),\r\n      light3: getRandomInt(30),\r\n    };\r\n    console.log(response);\r\n    return { success: true, response: { ...response } };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, ...error };\r\n  }\r\n}\r\n\r\nexport async function updateDeviceState(device, state) {\r\n  try {\r\n    console.log(`device: ${device}, state: ${state}`);\r\n    const response = { yeet: \"\" };\r\n    // const response = await axios.put(`/device/${state}`);\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    console.log(response);\r\n    return { success: true, ...response };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, ...error };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}