{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"\"\n});\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nexport async function getData() {\n  try {\n    // const response = await api.get('/data/');\n    await new Promise(r => setTimeout(r, 1000));\n    const response = {\n      light1: getRandomInt(100),\n      light2: getRandomInt(100),\n      light3: getRandomInt(30)\n    };\n    console.log(response);\n    return {\n      success: true,\n      response: { ...response\n      }\n    };\n  } catch (error) {\n    console.error(error);\n    return {\n      success: false,\n      ...error\n    };\n  }\n}\nexport async function updateDeviceState(device, state) {\n  try {\n    console.log(`device: ${device}, state: ${state}`);\n    const response = {\n      yeet: \"\"\n    }; // const response = await api.put(`/device/${state}`);\n\n    await new Promise(r => setTimeout(r, 1000));\n    console.log(response);\n    return {\n      success: true,\n      ...response\n    };\n  } catch (error) {\n    console.error(error);\n    return {\n      success: false,\n      ...error\n    };\n  }\n}","map":{"version":3,"sources":["C:/Users/Acer/ReactNativeProjects/internet_of_things/src/API/IoT.js"],"names":["axios","api","create","baseURL","getRandomInt","max","Math","floor","random","getData","Promise","r","setTimeout","response","light1","light2","light3","console","log","success","error","updateDeviceState","device","state","yeet"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE;AADc,CAAb,CAAZ;;AAIA,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,GAA3B,CAAP;AACD;;AAED,OAAO,eAAeI,OAAf,GAAyB;AAC9B,MAAI;AACF;AACA,UAAM,IAAIC,OAAJ,CAAaC,CAAD,IAAOC,UAAU,CAACD,CAAD,EAAI,IAAJ,CAA7B,CAAN;AACA,UAAME,QAAQ,GAAG;AACfC,MAAAA,MAAM,EAAEV,YAAY,CAAC,GAAD,CADL;AAEfW,MAAAA,MAAM,EAAEX,YAAY,CAAC,GAAD,CAFL;AAGfY,MAAAA,MAAM,EAAEZ,YAAY,CAAC,EAAD;AAHL,KAAjB;AAKAa,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,WAAO;AAAEM,MAAAA,OAAO,EAAE,IAAX;AAAiBN,MAAAA,QAAQ,EAAE,EAAE,GAAGA;AAAL;AAA3B,KAAP;AACD,GAVD,CAUE,OAAOO,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACA,WAAO;AAAED,MAAAA,OAAO,EAAE,KAAX;AAAkB,SAAGC;AAArB,KAAP;AACD;AACF;AAED,OAAO,eAAeC,iBAAf,CAAiCC,MAAjC,EAAyCC,KAAzC,EAAgD;AACrD,MAAI;AACFN,IAAAA,OAAO,CAACC,GAAR,CAAa,WAAUI,MAAO,YAAWC,KAAM,EAA/C;AACA,UAAMV,QAAQ,GAAG;AAAEW,MAAAA,IAAI,EAAE;AAAR,KAAjB,CAFE,CAGF;;AACA,UAAM,IAAId,OAAJ,CAAaC,CAAD,IAAOC,UAAU,CAACD,CAAD,EAAI,IAAJ,CAA7B,CAAN;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,WAAO;AAAEM,MAAAA,OAAO,EAAE,IAAX;AAAiB,SAAGN;AAApB,KAAP;AACD,GAPD,CAOE,OAAOO,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACA,WAAO;AAAED,MAAAA,OAAO,EAAE,KAAX;AAAkB,SAAGC;AAArB,KAAP;AACD;AACF","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"\",\r\n});\r\n\r\nfunction getRandomInt(max) {\r\n  return Math.floor(Math.random() * max);\r\n}\r\n\r\nexport async function getData() {\r\n  try {\r\n    // const response = await api.get('/data/');\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    const response = {\r\n      light1: getRandomInt(100),\r\n      light2: getRandomInt(100),\r\n      light3: getRandomInt(30),\r\n    };\r\n    console.log(response);\r\n    return { success: true, response: { ...response } };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, ...error };\r\n  }\r\n}\r\n\r\nexport async function updateDeviceState(device, state) {\r\n  try {\r\n    console.log(`device: ${device}, state: ${state}`);\r\n    const response = { yeet: \"\" };\r\n    // const response = await api.put(`/device/${state}`);\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    console.log(response);\r\n    return { success: true, ...response };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, ...error };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}