{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\ReactNativeProjects\\\\internet_of_things\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Box, Container, Divider } from \"@mui/material\";\nimport { sizing } from \"@mui/system\";\nimport SensorValueRow from \"./components/SensorValueRow\";\nimport { useState } from \"react\";\nimport ButtonDeviceRow from \"./components/ButtonDeviceRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const distanceMeasure = \"mm\";\n  const temperatureMeasure = \"Celcius\";\n  const [sensorState, setSensorState] = useState({\n    mtS1: 0,\n    mtS2: 0,\n    tmpS: 0\n  });\n  const [deviceState, setDeviceState] = useState({\n    lamp1: \"off\",\n    lamp2: \"off\",\n    lamp3: \"off\"\n  });\n  const lampStates = [{\n    value: \"on\",\n    title: \"On\"\n  }, {\n    value: \"of\",\n    title: \"Off\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-header\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        backgroundColor: \"#778899\",\n        minHeight: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sensor Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 15,\n            flexDirection: \"column\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(SensorValueRow, {\n            description: \"Motion sensor (1)\",\n            value: sensorState.mtS1,\n            measure: distanceMeasure\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SensorValueRow, {\n            description: \"Motion sensor (2)\",\n            value: sensorState.mtS2,\n            measure: distanceMeasure\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SensorValueRow, {\n            description: \"Temperature sensor\",\n            value: sensorState.tmpS,\n            measure: temperatureMeasure\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Device Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 15,\n            flexDirection: \"column\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ButtonDeviceRow, {\n            description: \"testas\",\n            selectedValue: deviceState.lamp1,\n            buttonsValueTitleSet: lampStates,\n            onSelectedChanged: (event, newAlignment) => setDeviceState(lamp1 = newAlignment, ...deviceState)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bcXPu1PItQBvym5I/OzgCzhog4w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Acer/ReactNativeProjects/internet_of_things/src/App.js"],"names":["logo","Box","Container","Divider","sizing","SensorValueRow","useState","ButtonDeviceRow","App","distanceMeasure","temperatureMeasure","sensorState","setSensorState","mtS1","mtS2","tmpS","deviceState","setDeviceState","lamp1","lamp2","lamp3","lampStates","value","title","backgroundColor","minHeight","display","flexDirection","flex","event","newAlignment"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Box, Container, Divider } from \"@mui/material\";\nimport { sizing } from \"@mui/system\";\nimport SensorValueRow from \"./components/SensorValueRow\";\nimport { useState } from \"react\";\nimport ButtonDeviceRow from \"./components/ButtonDeviceRow\";\n\nfunction App() {\n  const distanceMeasure = \"mm\";\n  const temperatureMeasure = \"Celcius\";\n  const [sensorState, setSensorState] = useState({\n    mtS1: 0,\n    mtS2: 0,\n    tmpS: 0,\n  });\n\n  const [deviceState, setDeviceState] = useState({\n    lamp1: \"off\",\n    lamp2: \"off\",\n    lamp3: \"off\",\n  });\n\n  const lampStates = [\n    { value: \"on\", title: \"On\" },\n    { value: \"of\", title: \"Off\" },\n  ];\n\n  return (\n    <div className=\"App-header\">\n      <Container\n        maxWidth=\"lg\"\n        sx={{ backgroundColor: \"#778899\", minHeight: \"100vh\" }}\n      >\n        <h2>Sensor Data:</h2>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div style={{ flex: 1 }} />\n          <div style={{ flex: 15, flexDirection: \"column\" }}>\n            <SensorValueRow\n              description={\"Motion sensor (1)\"}\n              value={sensorState.mtS1}\n              measure={distanceMeasure}\n            />\n            <SensorValueRow\n              description={\"Motion sensor (2)\"}\n              value={sensorState.mtS2}\n              measure={distanceMeasure}\n            />\n            <SensorValueRow\n              description={\"Temperature sensor\"}\n              value={sensorState.tmpS}\n              measure={temperatureMeasure}\n            />\n          </div>\n        </div>\n\n        <Divider />\n\n        <h2>Device Status:</h2>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div style={{ flex: 1 }} />\n          <div style={{ flex: 15, flexDirection: \"column\" }}>\n            <ButtonDeviceRow\n              description={\"testas\"}\n              selectedValue={deviceState.lamp1}\n              buttonsValueTitleSet={lampStates}\n              onSelectedChanged={(event, newAlignment) => setDeviceState(lamp1 = newAlignment, ...deviceState)}\n            />\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}