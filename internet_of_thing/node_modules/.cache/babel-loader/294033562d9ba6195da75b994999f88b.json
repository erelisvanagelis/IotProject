{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\ReactNativeProjects\\\\internet_of_things\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Box, Container, Divider, Stack } from \"@mui/material\";\nimport { sizing } from \"@mui/system\";\nimport SensorValueRow from \"./components/SensorValueRow\";\nimport { useState } from \"react\";\nimport ButtonDeviceRow from \"./components/ButtonDeviceRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst measurements = {\n  distance: \"mm\",\n  temperature: \"celcius\",\n  moisture: \"moistiness\"\n};\nconst lampStates = [{\n  value: \"on\",\n  title: \"On\"\n}, {\n  value: \"off\",\n  title: \"Off\"\n}];\n\nfunction App() {\n  _s();\n\n  const [sensorState, setSensorState] = useState({\n    motion1: 0,\n    motion2: 0,\n    temperature: 0,\n    moisture: 0\n  });\n  const [deviceState, setDeviceState] = useState({\n    lamp1: \"off\",\n    lamp2: \"off\",\n    lamp3: \"off\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-header\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        backgroundColor: \"#778899\",\n        minHeight: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sensor Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          sx: {\n            marginLeft: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(SensorValueRow, {\n            description: \"Motion (1)\",\n            value: sensorState.motion1,\n            measure: measurements.distance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SensorValueRow, {\n            description: \"Motion (2)\",\n            value: sensorState.motion2,\n            measure: measurements.distance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SensorValueRow, {\n            description: \"Temperature\",\n            value: sensorState.temperature,\n            measure: measurements.temperature\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SensorValueRow, {\n            description: \"Moistures\",\n            value: sensorState.moisture,\n            measure: measurements.moisture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Device Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          sx: {\n            marginLeft: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(ButtonDeviceRow, {\n            description: \"Light (1)\",\n            selectedValue: deviceState.lamp1,\n            buttonsValueTitleSet: lampStates,\n            setSelectedValue: value => setDeviceState({ ...deviceState,\n              lamp1: value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonDeviceRow, {\n            description: \"Light (2)\",\n            selectedValue: deviceState.lamp2,\n            buttonsValueTitleSet: lampStates,\n            setSelectedValue: value => setDeviceState({ ...deviceState,\n              lamp2: value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonDeviceRow, {\n            description: \"Light (3)\",\n            selectedValue: deviceState.lamp3,\n            buttonsValueTitleSet: lampStates,\n            setSelectedValue: value => setDeviceState({ ...deviceState,\n              lamp3: value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oGX5QVFP6/rL/4p00ZonmsZbpSM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Acer/ReactNativeProjects/internet_of_things/src/App.js"],"names":["logo","Box","Container","Divider","Stack","sizing","SensorValueRow","useState","ButtonDeviceRow","measurements","distance","temperature","moisture","lampStates","value","title","App","sensorState","setSensorState","motion1","motion2","deviceState","setDeviceState","lamp1","lamp2","lamp3","backgroundColor","minHeight","marginLeft"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Box, Container, Divider, Stack } from \"@mui/material\";\nimport { sizing } from \"@mui/system\";\nimport SensorValueRow from \"./components/SensorValueRow\";\nimport { useState } from \"react\";\nimport ButtonDeviceRow from \"./components/ButtonDeviceRow\";\n\nconst measurements = {\n  distance: \"mm\",\n  temperature: \"celcius\",\n  moisture: \"moistiness\",\n};\n\nconst lampStates = [\n  { value: \"on\", title: \"On\" },\n  { value: \"off\", title: \"Off\" },\n];\n\nfunction App() {\n  const [sensorState, setSensorState] = useState({\n    motion1: 0,\n    motion2: 0,\n    temperature: 0,\n    moisture: 0,\n  });\n\n  const [deviceState, setDeviceState] = useState({\n    lamp1: \"off\",\n    lamp2: \"off\",\n    lamp3: \"off\",\n  });\n\n  return (\n    <div className=\"App-header\">\n      <Container\n        maxWidth=\"lg\"\n        sx={{ backgroundColor: \"#778899\", minHeight: \"100vh\" }}\n      >\n        <Stack>\n          <h2>Sensor Data:</h2>\n          <Stack sx={{ marginLeft: 3 }}>\n            <SensorValueRow\n              description={\"Motion (1)\"}\n              value={sensorState.motion1}\n              measure={measurements.distance}\n            />\n            <SensorValueRow\n              description={\"Motion (2)\"}\n              value={sensorState.motion2}\n              measure={measurements.distance}\n            />\n            <SensorValueRow\n              description={\"Temperature\"}\n              value={sensorState.temperature}\n              measure={measurements.temperature}\n            />\n            <SensorValueRow\n              description={\"Moistures\"}\n              value={sensorState.moisture}\n              measure={measurements.moisture}\n            />\n          </Stack>\n          <Divider />\n\n          <h2>Device Status:</h2>\n          <Stack sx={{ marginLeft: 3 }}>\n            <ButtonDeviceRow\n              description={\"Light (1)\"}\n              selectedValue={deviceState.lamp1}\n              buttonsValueTitleSet={lampStates}\n              setSelectedValue={(value) =>\n                setDeviceState({ ...deviceState, lamp1: value })\n              }\n            />\n            <ButtonDeviceRow\n              description={\"Light (2)\"}\n              selectedValue={deviceState.lamp2}\n              buttonsValueTitleSet={lampStates}\n              setSelectedValue={(value) =>\n                setDeviceState({ ...deviceState, lamp2: value })\n              }\n            />\n            <ButtonDeviceRow\n              description={\"Light (3)\"}\n              selectedValue={deviceState.lamp3}\n              buttonsValueTitleSet={lampStates}\n              setSelectedValue={(value) =>\n                setDeviceState({ ...deviceState, lamp3: value })\n              }\n            />\n          </Stack>\n        </Stack>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}